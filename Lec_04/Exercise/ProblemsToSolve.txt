Създавай клас Car в package comparators:
- Този клас трябва да имплементира Comparable 
- Този клас има следните данни: string vin (id), int topSpeed, String color, String brand
- Направи му конструктор, който покрива всичките му данни
- направи getters за всеки от тези данни освен vin 
- override-ни метода equals който да сравнява дали са равни vin даннит е
- override ни hashCode
- override ни compareTo, естествения ред трябва да дефинира разликите им между topSpeed
- override toString метода със всичките му данни 

Направи клас CarByNameComparator който имплементира Comparator
- да се override-не и да се сравнят имената на техните брандове 

Направи клас CarByTopSpeedDescComparator който имплементира Comparator
- да се override-не и да се сравнят topSpeed като целта е да има desc сортиране

В някой main функция направи следните неща:
- създай няколко Car обекта и ги добави в един ArrayList
- Сортирай ги чрез Collections и ги принтирай 
- Сортирай ги чрез компаратора за име, които се създаде и ги покажи 
- Сортирай ги чрез тяхният topSpeed по създадения компаратор и ги покажи 
- Създай map, в който обектите Car са ключове и техните стойности са просто int числа 
- Сортирай ги всичките тези елементи в mapa (прехвърли ги в TreeMap)
- Сортирай ги всичките тези елементи чрез компаратора за име 

Създай нов клас CollectionsExample:
- в него да има функцията exploreCollections, в която да има прави следните неща:
	- Прави ArrayList от Integer и го сортира и го показва на екрана 
	- Сортира същия този ArrayList наобратно използвайки Collections.reverseOrder() и го принтира 
	- Да принтира индекса на избран елемент от ArrayList-a чрез Collections.indexOf()
	- Да сортира този arrayList и да използва Collections.binarySearch() за да принтира индекса на елемента от горната стъпка 
	- Да shuffle-не всички тези елементи от ArrayLista 
	- Да създаде нов ArrayList от string и LinkedList от стринг и да го напълни с елементи 
	- Да копира от единия в другия и да принтира резултата 
	- Върху единия от List<String> имплементациите да използва Colelctions.fill
	- Да се създаде нов ArrayList от String и да му се добавят елементи 
	- Да се използва върху него reverse и swamp и да се видтят резултатите 
	- Да се създаде нов List чрез .of статичния метод и да се използват min, max и frequency фунцкиите 
	- Да се създаде Set чрез .of статичния метод 
	- Да се създаде Map чрез .of и чрез .ofEntry статичните методи 
	- Да се създаде Set чрез .newHashSet статичния метод 
	
- да се създаде функция findDistinctWords(String[] words) и показва всички думи, които се срещат само веднъж 
- да се създаде функция filterWords(Collections<String> words, String filterWord, която чрез итератор маха тези думи
които са равни на filterWord 
- да се създаде функция Map<String, List<Car>> carsByBrandNames(Collection<Car> cars), която прави map и ключовете са
самите марки коли, а стойноста е списък, който съдържа колите със същата марка (използвай тук .putIfAbsetnt)